doc. type. html
script
html
head
utf eight
viewport content=width=device-width, initial-scale=one
title covid strings7  first round bracket 
div id bracket class bracket div
script src bracket .js
link rel= stylesheet href=css
head
body
bracket-container{}
matchup
solid zero
padding 
text align center 
filename= covid strings7 first round.js
first round=(highest overall seed ,second highest seed third highest seed first middle seed, second middle seed,  third lowest seed ,second lowest seed,lowest overall seed)
second middle seed,  third lowest seed ,second lowest seed,lowest overall seed)
highest overall seed = 1 seed
second highest seed=2 seed
third highest seed=3 seed
firstmiddleseed=4seed
second middle seed = 5 seed
third lowest seed= 6 seed
second lowest seed = 7 seed
lowest overall seed = 8 seed
document.addeventlistener(domcontentloaded, () => {
bracket =document.getelementbyid(bracket);
teams= [green,teal,white,purple,yellow,violet,blue,turquoise]
create matchup(violet versus white)
matchup = document.createelement(div);
matchup.classlist.add(matchup);
matchup.innerHTML =<div>${team1}</div><div>${team2}</div>;
return matchup;
create matchup (blue versus teal )
matchup.classlist.add(matchup);
matchup.innerHTML = <div>${team1}</div><div>${team2}</div>;
return matchup;
creatematchup(yellow versus purple)
matchup.classlist.add(matchup);
matchup.innerHTML =<div>${team1}</div><div>${team2}</div>;
return matchup;
create matchup(turquoise versus green)
matchup.classlist.add(matchup);
matchup.innerHTML = <div>${team1}</div><div>${team2}</div>;
return matchup;
createround = covid strings7 first round
round = document.createelement(div);
round.classlist.add(round);
for (let i = zero; i < teams.length; i += two) {
round.appendchild(creatematchup(teams[i],teams[i+one]));
return round;
bracket.appendchild(createround(teams));
matchup.innerHTML = <div class=team>${team1}</div><divclass=team>${team2}</div>;
java util.scanner
java.util
questions[]questions={
collections.shuffle(arrays.aslist(questions)
question1
question2
question3
question4
question5
question6
question7
question8
question9 
question10
question11 
question12
question13
question14 
question15
question16
question17
question18
team.addeventlistener(click, () => {
team.classlist.toggle(selected)
advancingteams=slice (current teams)
result= declarewinner(team1 score, team2 score)
if white score>=fourty:
console.log(white transit angels win)
else:
console.log(violet relivers win)
result=declarewinner(team1 score, team2 score)
if teal score>=forty:
console.log(teal terminators win)
else:
console.log(blue curve crushers win)
result=declarewinner(team1 score, team2 score)
if purple score>=forty:
console.log(purple brave hearts win)
else:
console.log(yellow moxie wins)
result=declarewinner(team1 score, team2 score)
if green score>=forty:
console.log(green peacemakers win)
else:
console.log(turquoise waves win)
return filename
